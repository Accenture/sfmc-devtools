export default {
    activityTypeMapping: {
        dataExtract: 73,
        dataFactoryUtility: 425,
        emailSend: 42,
        fileTransfer: 53,
        filter: 303,
        fireEvent: 749,
        importFile: 43,
        journeyEntry: 952,
        journeyEntryOld: 733,
        query: 300,
        script: 423,
        verification: 1000,
        wait: 467,
        push: 736,
        sms: 725,
        reportDefinition: 84,
        refreshMobileFilteredList: 724,
        refreshGroup: 45,
        interactions: 1101,
        interactionStudioData: 1010,
        importMobileContact: 726,
    },
    bodyIteratorField: 'items',
    dependencies: [
        'dataExtract',
        'emailSend',
        'fileTransfer',
        'fileLocation',
        'folder-automations',
        'importFile',
        'query',
        'script',
        'verification',
    ],
    dependencyGraph: {
        dataExtract: ['steps.activities.r__type'],
        emailSend: ['steps.activities.r__type'],
        fileTransfer: ['steps.activities.r__type'],
        importFile: ['steps.activities.r__type'],
        query: ['steps.activities.r__type'],
        script: ['steps.activities.r__type'],
        verification: ['steps.activities.r__type'],
    },
    folderType: 'automations',
    hasExtended: false,
    filter: {
        description: ['Event Definition Automation'],
    },
    idField: 'id',
    keyIsFixed: false,
    keyField: 'key',
    nameField: 'name',
    folderIdField: 'categoryId',
    createdDateField: 'createdDate', // only returned by upsert
    createdNameField: 'createdByName', // only returned by upsert
    lastmodDateField: 'lastSavedDate', // only returned by upsert
    lastmodNameField: 'lastSavedByName', // only returned by upsert
    restPagination: true,
    maxKeyLength: 200, // confirmed max length
    scheduleTypeMapping: {
        MINUTELY: 1,
        HOURLY: 2,
        DAILY: 3,
        WEEKLY: 4,
        MONTHLY: 5,
    },
    statusMapping: {
        AwaitingTrigger: 7,
        Building: 1,
        BuildingError: 0,
        Error: -1,
        InactiveTrigger: 8,
        PausedSchedule: 4,
        Ready: 2,
        Running: 3,
        Scheduled: 6,
        Stopped: 5,
    },
    fileNameOperatorMapping: {
        Equals: 4,
        Contains: 1,
        'Begins with': 2,
        'Ends with': 3,
    },
    timeZoneMapping: {
        // bugs in SFMC timezones:
        // * Yerevan GMT+4 always is changing to 'Caucasus Standard Time' GMT+4, so no id 29
        // * La Paz GMT+4 is changing always to 'SA Western Standard Time' GMT-3, so no id 71
        // * no ids 81 and 85, because two Mexican timezones in UI are showing with the suffix 'Old'
        'Afghanistan Standard Time': 30,
        'Alaskan Standard Time': 89,
        'Arab Standard Time': 20,
        'Arabian Standard Time': 25,
        'Arabic Standard Time': 19,
        'Argentina Standard Time': 65,
        'Atlantic Standard Time': 70,
        'AUS Central Standard Time': 51,
        'AUS Eastern Standard Time': 53,
        'Azerbaijan Standard Time': 26,
        'Azores Standard Time': 61,
        'Canada Central Standard Time': 82,
        'Cape Verde Standard Time': 62,
        'Caucasus Standard Time': 27,
        'Cen. Australia Standard Time': 50,
        'Central America Standard Time': 78,
        'Central Asia Standard Time': 38,
        'Central Brazilian Standard Time': 72,
        'Central Europe Standard Time': 6,
        'Central European Standard Time': 8,
        'Central Pacific Standard Time': 57,
        'Central Standard Time': 79,
        'Central Standard Time (Mexico)': 80,
        'Central Standard Time (no DST)': 1,
        'China Standard Time': 42,
        'Dateline Standard Time': 92,
        'E. Africa Standard Time': 22,
        'E. Australia Standard Time': 52,
        'E. Europe Standard Time': 17,
        'E. South America Standard Time': 64,
        'Eastern Standard Time': 76,
        'Egypt Standard Time': 13,
        'Ekaterinburg Standard Time': 31,
        'Fiji Standard Time': 59,
        'FLE Standard Time': 15,
        'Georgian Standard Time': 23,
        'GMT Standard Time': 3,
        'Greenland Standard Time': 67,
        'Greenwich Standard Time': 4,
        'GTB Standard Time': 11,
        'Hawaiian Standard Time': 90,
        'India Standard Time': 34,
        'Iran Standard Time': 24,
        'Israel Standard Time': 16,
        'Jordan Standard Time': 10,
        'Korea Standard Time': 48,
        'Mauritius Standard Time': 28,
        'Mid-Atlantic Standard Time': 63,
        'Middle East Standard Time': 12,
        'Montevideo Standard Time': 68,
        'Morocco Standard Time': 2,
        'Mountain Standard Time': 86,
        'Mountain Standard Time (Mexico)': 84,
        'Myanmar Standard Time': 39,
        'N. Central Asia Standard Time': 37,
        'Namibia Standard Time': 18,
        'Nepal Standard Time': 36,
        'New Zealand Standard Time': 58,
        'Newfoundland Standard Time': 69,
        'North Asia East Standard Time': 43,
        'North Asia Standard Time': 41,
        'Pacific SA Standard Time': 73,
        'Pacific Standard Time': 87,
        'Pacific Standard Time (Mexico)': 88,
        'Pakistan Standard Time': 32,
        'Romance Standard Time': 7,
        'Russian Standard Time': 21,
        'SA Pacific Standard Time': 75,
        'SA Western Standard Time': 66,
        'Samoa Standard Time': 91,
        'SE Asia Standard Time': 40,
        'Singapore Standard Time': 44,
        'South Africa Standard Time': 14,
        'Sri Lanka Standard Time': 35,
        'Taipei Standard Time': 46,
        'Tasmania Standard Time': 55,
        'Tokyo Standard Time': 47,
        'Tonga Standard Time': 60,
        'US Eastern Standard Time': 77,
        'US Mountain Standard Time': 83,
        'Venezuela Standard Time': 74,
        'Vladivostok Standard Time': 56,
        'W. Australia Standard Time': 45,
        'W. Central Africa Standard Time': 9,
        'W. Europe Standard Time': 5,
        'West Asia Standard Time': 33,
        'West Pacific Standard Time': 54,
        'Yakutsk Standard Time': 49,
    },
    timeZoneDifference: {
        1: '-06:00',
        2: '+00:00',
        3: '+00:00',
        4: '+00:00',
        5: '+01:00',
        6: '+01:00',
        7: '+01:00',
        8: '+01:00',
        9: '+01:00',
        10: '+02:00',
        11: '+02:00',
        12: '+02:00',
        13: '+02:00',
        14: '+02:00',
        15: '+02:00',
        16: '+02:00',
        17: '+02:00',
        18: '+02:00',
        19: '+03:00',
        20: '+03:00',
        21: '+03:00',
        22: '+03:00',
        23: '+03:00',
        24: '+03:30',
        25: '+04:00',
        26: '+04:00',
        27: '+04:00',
        28: '+04:00',
        29: '+04:00',
        30: '+04:30',
        31: '+05:00',
        32: '+05:00',
        33: '+05:00',
        34: '+05:30',
        35: '+05:30',
        36: '+05:45',
        37: '+06:00',
        38: '+06:00',
        39: '+06:30',
        40: '+07:00',
        41: '+07:00',
        42: '+08:00',
        43: '+08:00',
        44: '+08:00',
        45: '+08:00',
        46: '+08:00',
        47: '+09:00',
        48: '+09:00',
        49: '+09:00',
        50: '+09:30',
        51: '+09:30',
        52: '+10:00',
        53: '+10:00',
        54: '+10:00',
        55: '+10:00',
        56: '+10:00',
        57: '+11:00',
        58: '+12:00',
        59: '+12:00',
        60: '+13:00',
        61: '-01:00',
        62: '-01:00',
        63: '-02:00',
        64: '-03:00',
        65: '-03:00',
        66: '-03:00',
        67: '-03:00',
        68: '-03:00',
        69: '-03:30',
        70: '-04:00',
        71: '-04:00',
        72: '-04:00',
        73: '-04:00',
        74: '-04:30',
        75: '-05:00',
        76: '-05:00',
        77: '-05:00',
        78: '-06:00',
        79: '-06:00',
        80: '-06:00',
        81: '-06:00',
        82: '-06:00',
        83: '-07:00',
        84: '-07:00',
        85: '-07:00',
        86: '-07:00',
        87: '-08:00',
        88: '-08:00',
        89: '-09:00',
        90: '-10:00',
        91: '-11:00',
        92: '-12:00',
    },
    type: 'automation',
    typeDescription:
        'Used via Automation Studio directly - or indirectly via Journey Builder & MC Connect.',
    typeRetrieveByDefault: true,
    typeName: 'Automation',
    customDeployTypes: ['wait'],
    manualDeployTypes: [],
    fields: {
        categoryId: {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        description: {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'fileTrigger.fileNamePatternTypeId': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'fileTrigger.fileNamingPattern': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'fileTrigger.folderLocationText': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'fileTrigger.isPublished': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'fileTrigger.queueFiles': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'fileTrigger.triggerActive': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        id: {
            isCreateable: false,
            isUpdateable: null,
            retrieving: true,
            template: false,
        },
        key: {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        lastRunInstanceId: {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false,
            template: false,
        },
        lastRunTime: {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false,
            template: false,
        },
        legacyId: {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false,
            template: false,
        },
        lastSavedDate: {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false, // only returned by upsert
            template: false,
        },
        lastSavedByName: {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false, // only returned by upsert
            template: false,
        },
        createdDate: {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false, // only returned by upsert
            template: false,
        },
        createdByName: {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false, // only returned by upsertt
            template: false,
        },
        updateInProgress: {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false,
            template: false,
        },
        name: {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        notifications: {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'notifications[].email': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'notifications[].message': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'notifications[].channelType': {
            // always 'Account'
            isCreateable: true,
            isUpdateable: true,
            retrieving: false,
            template: false,
        },
        'notifications[].type': {
            // custom shorthand for channelType
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'notifications[].notificationType': {
            // Error, Complete
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        startSource: {
            skipValidation: true,
        },
        'schedule.endDate': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'schedule.icalRecur': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'schedule.id': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: false,
            template: false,
        },
        'schedule.occurrences': {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false,
            template: false,
        },
        'schedule.pattern': {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false,
            template: false,
        },
        'schedule.rangeTypeId': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: false,
            template: false,
        },
        'schedule.scheduledTime': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: false,
            template: false,
        },
        'schedule.scheduleStatus': {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false,
            template: false,
        },
        'schedule.startDate': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'schedule.statusId': {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false,
            template: false,
        },
        'schedule.timezoneId': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: false,
            template: false,
        },
        'schedule.timezoneName': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'schedule.typeId': {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false,
            template: false,
        },
        status: {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        statusId: {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false,
            template: false,
        },
        steps: {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'steps[].activities': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'steps[].activities[].activityObjectId': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: false,
            template: false,
        },
        'steps[].activities[].displayOrder': {
            // we remove it during post-processing but need to ensure the array order equals the displayOrder
            isCreateable: true,
            isUpdateable: true,
            retrieving: false,
            template: false,
        },
        'steps[].activities[].id': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: false,
            template: false,
        },
        'steps[].activities[].name': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'steps[].activities[].objectTypeId': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'steps[].activities[].targetDataExtensions': {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false,
            template: false,
        },
        'steps[].activities[].description': {
            isCreateable: false,
            isUpdateable: false,
            retrieving: false,
            template: false,
        },
        'steps[].activities[].serializedObject': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: false,
            template: false,
        },
        'steps[].activities[].r__type': {
            skipValidation: true,
        },
        'steps[].activities[].r__key': {
            skipValidation: true,
        },
        'steps[].activities[].timeZone': {
            // used for wait actitivity
            isCreateable: false,
            isUpdateable: false,
            retrieving: true,
            template: true,
        },
        'steps[].description': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'steps[].annotation': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: false,
            template: false,
        },
        'steps[].id': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: false,
            template: false,
        },
        'steps[].name': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        'steps[].step': {
            isCreateable: false,
            isUpdateable: false,
            retrieving: true,
            template: true,
        },
        'steps[].stepNumber': {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        type: {
            isCreateable: true,
            isUpdateable: true,
            retrieving: true,
            template: true,
        },
        typeId: {
            isCreateable: true,
            isUpdateable: true,
            retrieving: false,
            template: false,
        },
        r__folder_Path: { skipValidation: true },
    },
};
